{"version":3,"sources":["components/Header.js","components/Modal.js","components/Dates.js","components/Calender.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","onClick","onPreviousM","month","year","onToday","onNextM","Modal","date","type","placeholder","onChange","inputVal","onKeyDown","handleKey","autoFocus","saveEvent","modalClose","Dates","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getDates","_this$props","dates","selectedDate","getDay","i","getMonth","day","getDate","state","events","setDate","entries","map","_ref","_ref2","slicedToArray","event","_this2","Fragment","sort","b","_ref3","_ref4","todayD","todayMonth","todayYear","key","String","handleSelectDate","Array","isArray","item","deleteEvent","React","Component","Calender","target","parent","parentNode","classList","contains","toConsumableArray","children","forEach","remove","setState","modal","firstChild","data","inputs","handlePreviousM","prevState","setFullYear","setMonth","handleNextM","handleToday","input","value","push","console","log","indexOf","previousElementSibling","keyCode","Date","days","components_Header","getDays","components_Modal","components_Dates","select","App","components_Calender","getFullYear","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oQAsBeA,MApBf,SAAgBC,GACd,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACdH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cACdC,QAASL,EAAMM,aACjB,OAEFL,EAAAC,EAAAC,cAAA,sBAAcH,EAAMO,MAAM,EAA1B,IAA8BP,EAAMQ,MACpCP,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cACdC,QAASL,EAAMS,SADnB,SAIAR,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cACdC,QAASL,EAAMU,SACjB,SCYQC,MA1Bf,SAAeX,GACb,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,wCAAgCH,EAAMY,KAAtC,KAA8CZ,EAAMO,MAAM,GACxDN,EAAAC,EAAAC,cAAA,6BAEEF,EAAAC,EAAAC,cAAA,SAAOU,KAAK,OAAOC,YAAY,QAC3BC,SAAUf,EAAMgB,SACbC,UAAWjB,EAAMkB,UACjBC,WAAS,KAGrBlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACZH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aACdC,QAASL,EAAMoB,WADnB,QAIAnB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aACbC,QAASL,EAAMqB,YADpB,oBCyDOC,cAzEb,SAAAA,EAAYtB,GAAO,IAAAuB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAM1B,KAMR8B,SAAW,WAAM,IAAAC,EACmCR,EAAKvB,MAAhDY,EADQmB,EACRnB,KAAMoB,EADED,EACFC,MAAQzB,EADNwB,EACMxB,MAAOC,EADbuB,EACavB,KAAMyB,EADnBF,EACmBE,aAClC,GAAuB,KAAlBrB,EAAKsB,SACR,IAAK,IAAIC,EAAI,EAAGA,EAAIvB,EAAKsB,SAAUC,IACjCH,EAAM,KAAUG,EAAI,MAAY,CAAC,GAAI,SAEvC,IAAK,IAAIA,EAAI,EAAGA,EAAIvB,EAAKsB,SAAUC,IACjCH,EAAM,KAAUG,EAAI,MAAW,CAAC,GAAI,IAGxC,MAAOvB,EAAKwB,cAAgB7B,GAAO,CACjC,IAAI8B,EAAMzB,EAAK0B,UAAY,IAAM/B,EAAQ,IAAMC,EAC/CwB,EAAMK,GAAO,CAACzB,EAAK0B,UAAWf,EAAKgB,MAAMC,OAAOH,IAChDzB,EAAK6B,SAAS7B,EAAK0B,UAAY,GAGjC,GAAsB,IAAlB1B,EAAKsB,SACPF,EAAM,cAAgB,CAAC,IAAK,UACvB,GAAsB,IAAlBpB,EAAKsB,SACd,IAAK,IAAIC,EAAIvB,EAAKsB,SAAUC,EAAI,EAAGA,IACjCH,EAAM,UAAWG,EAAI,GAAK,CAAC,IAAK,KAQpC,OANAX,OAAOkB,QAAQV,GAAOW,IAAI,SAAAC,GAAkB,IAAAC,EAAArB,OAAAsB,EAAA,EAAAtB,CAAAoB,EAAA,GAAXG,GAAWF,EAAA,GAAAA,EAAA,KACtCZ,KAAkBc,EAAM,IACzBxB,EAAKgB,MAAMC,OAAOP,EAAe,IAAM1B,EAAQ,IAAMC,KACtDuC,EAAM,GAAKxB,EAAKgB,MAAMC,OAAOO,EAAM,GAAK,IAAMxC,EAAQ,IAAMC,MAGzDwB,GAjCPT,EAAKgB,MAAQ,CACXC,OAAQjB,EAAKvB,MAAMwC,QAHJjB,wEAsCX,IAAAyB,EAAAtB,KACN,OACEzB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+C,SAAA,KACCzB,OAAOkB,QAAQhB,KAAKI,YACjBoB,KAAK,SAAChD,EAAGiD,GAAJ,OAAUjD,EAAE,GAAKiD,EAAE,KACxBR,IAAI,SAAAS,EAAejB,GAAM,IAAAkB,EAAA7B,OAAAsB,EAAA,EAAAtB,CAAA4B,EAAA,GAAnBf,EAAmBgB,EAAA,GAAdN,EAAcM,EAAA,GACzB,OACFpD,EAAAC,EAAAC,cAAA,OAAKC,WAAa2C,EAAM,MAAQC,EAAKhD,MAAMsD,SACxBN,EAAKhD,MAAMuD,cAAgBP,EAAKhD,MAAMO,QACtCyC,EAAKhD,MAAMwD,aAAeR,EAAKhD,MAAMQ,KACrC,uBACC,iBACZiD,IAAKpB,EAAMqB,OAAOV,EAAKhD,MAAMY,KAAKsB,UAClC7B,QAAS2C,EAAKhD,MAAM2D,kBACzBZ,EAAM,GACP9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACZwD,MAAMC,QAAQd,EAAM,IACnBA,EAAM,GAAGJ,IAAI,SAACmB,EAAM3B,GAClB,OAAQlC,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+C,SAAA,KACAhD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAQqD,IAAKK,EAAO3B,GAChC2B,GAEF7D,EAAAC,EAAAC,cAAA,UAAQE,QAAS2C,EAAKhD,MAAM+D,aAA5B,QAKR,eAlEKC,IAAMC,WCoMXC,cAhMd,SAAAA,EAAYlE,GAAM,IAAAuB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwC,IACjB3C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0C,GAAArC,KAAAH,KAAM1B,KA0BN2D,iBAAmB,SAACZ,GAClB,IAAMoB,EAASpB,EAAMoB,OACfC,EAASD,EAAOE,WACnBF,EAAOG,UAAUC,SAAS,mBAC3B/C,OAAAgD,EAAA,EAAAhD,CAAI4C,EAAOK,UAAUC,QAAQ,SAACZ,GAC5BA,EAAKQ,UAAUK,OAAO,cAExBR,EAAO/D,WAAa,YACpBmB,EAAKqD,SAAS,CACZC,MAAO,OACP5C,aAAckC,EAAOW,WAAWC,OAE/BxD,EAAKgB,MAAMN,eAAiBkC,EAAOW,WAAWC,OAC/CxD,EAAKyD,OAASzD,EAAKiB,OAAO2B,EAAOW,WAAWC,KAAO,IACzBxD,EAAKgB,MAAMhC,MAAQ,IACnBgB,EAAKgB,MAAM/B,OAAS,KAExC4D,EAAOE,UAAUC,SAAS,oBAClC/C,OAAAgD,EAAA,EAAAhD,CAAI4C,EAAOC,WAAWI,UAAUC,QAAQ,SAACZ,GACvCA,EAAKQ,UAAUK,OAAO,cAExBP,EAAOhE,WAAa,YACpBmB,EAAKqD,SAAS,CACZC,MAAO,OACP5C,aAAcmC,EAAOU,WAAWC,SAnDrBxD,EAwDjB0D,gBAAkB,WACQ,IAArB1D,EAAKgB,MAAMhC,QACZgB,EAAKqD,SAAS,SAAAM,GAEd,MAAO,CAAC3E,MAAM,GACNC,MAFY0E,EAAU1E,KAAO,KAIvCe,EAAKX,KAAKuE,YAAY5D,EAAKgB,MAAM/B,KAAO,IAExCe,EAAKqD,SAAS,SAAAM,GAEZ,MAAO,CAAC3E,QADc2E,EAAU3E,SAGlCgB,EAAKX,KAAKwE,SAAS7D,EAAKgB,MAAMhC,MAAM,GACpCgB,EAAKS,MAAQ,IAtEET,EAyEjB8D,YAAc,WACY,KAArB9D,EAAKgB,MAAMhC,OACZgB,EAAKqD,SAAS,SAAAM,GAEd,MAAO,CAAC3E,OAAO,EACPC,MAFQ0E,EAAU1E,KAAO,KAKnCe,EAAKqD,SAAS,SAAAM,GAEZ,MAAO,CAAC3E,QADU2E,EAAU3E,SAG9BgB,EAAKS,MAAQ,IArFET,EAwFjB+D,YAAc,WACZ/D,EAAKqD,SAAS,CACZrE,MAAOgB,EAAKvB,MAAMO,MAClBC,KAAMe,EAAKvB,MAAMQ,OAEnBe,EAAKS,MAAQ,GACbT,EAAKX,KAAKwE,SAAS7D,EAAKvB,MAAMO,OAC9BgB,EAAKX,KAAKuE,YAAY5D,EAAKvB,MAAMQ,OA/FlBe,EAkGjBF,WAAa,WACXE,EAAKqD,SAAS,CACZC,OAAO,IAETtD,EAAKgE,MAAQ,IAtGEhE,EAyGjBP,SAAW,SAAC+B,GACTxB,EAAKgE,MAAQxC,EAAMoB,OAAOqB,OA1GZjE,EA6GjBH,UAAY,WACVG,EAAKqD,SAAS,CACZC,OAAO,IAENtD,EAAKgE,OACNhE,EAAKyD,OAAOS,KAAKlE,EAAKgE,OAExBhE,EAAKiB,OAAOjB,EAAKgB,MAAMN,aAAe,IAC1BV,EAAKgB,MAAMhC,MAAQ,IACnBgB,EAAKgB,MAAM/B,MAAQe,EAAKyD,OACpCzD,EAAKgE,MAAQ,IAvHEhE,EA0HjBwC,YAAc,SAAChB,GACb,IAAMoB,EAASpB,EAAMoB,OACRA,EAAOE,WAAWA,WAAWS,WAAWC,KAErDW,QAAQC,IACLpE,EAAKiB,OACN2B,EAAOE,WAAWA,WAAWS,WAAWC,KACrC,IACOxD,EAAKgB,MAAMhC,MAAQ,IACnBgB,EAAKgB,MAAM/B,MACVoF,QAAQzB,EAAO0B,uBAAuBd,OAEnDW,QAAQC,IAAIxB,EAAO0B,uBAAuBd,OAtI3BxD,EAyIjBL,UAAY,SAAC6B,GAEE,KACVA,EAAM+C,SACPvE,EAAKF,aAHO,KAKX0B,EAAM+C,SACPvE,EAAKH,aA9IPG,EAAKgB,MAAQ,CACXhC,MAAOgB,EAAKvB,MAAMO,MAClBC,KAAMe,EAAKvB,MAAMQ,KACjByB,aAAc,GACd4C,OAAO,GAETtD,EAAKS,MAAQ,GACfT,EAAKX,KAAO,IAAImF,KAAKxE,EAAKgB,MAAM/B,KAAMe,EAAKgB,MAAMhC,MAAO,GACxDgB,EAAKyE,KAAO,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAC/CzE,EAAKyD,OAAS,GACdzD,EAAKgE,MAAQ,GACbhE,EAAKiB,OAAS,GAbCjB,yEAiBf,OACEG,KAAKsE,KAAKrD,IAAI,SAACN,EAAKF,GAClB,OACElC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACVqD,IAAKpB,EAAMF,EAAI,GACjBE,sCA+HV,OACGpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAC8F,EAAD,CACErF,KAAQc,KAAK1B,MAAMY,KACnBL,MAASmB,KAAKa,MAAMhC,MACpBC,KAAQkB,KAAKa,MAAM/B,KACnBF,YAAeoB,KAAKuD,gBACpBvE,QAAWgB,KAAK2D,YAChB5E,QAAWiB,KAAK4D,cAEnBrF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbsB,KAAKwE,WAEDxE,KAAKa,MAAMsC,OACV5E,EAAAC,EAAAC,cAACgG,EAAD,CAAOvF,KAAQc,KAAKa,MAAMN,aACnB1B,MAASmB,KAAKa,MAAMhC,MACpBc,WAAcK,KAAKL,WACnBD,UAAaM,KAAKN,UAClBJ,SAAYU,KAAKV,SACjBE,UAAaQ,KAAKR,YAG3BjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAACiG,EAAD,CAAOxF,KAAQc,KAAKd,KACb0C,OAAU5B,KAAK1B,MAAMY,KACrBL,MAASmB,KAAKa,MAAMhC,MACpByB,MAASN,KAAKM,MACduB,WAAc7B,KAAK1B,MAAMO,MACzBC,KAAQkB,KAAKa,MAAM/B,KACnBgD,UAAa9B,KAAK1B,MAAMQ,KACxByB,aAAgBP,KAAKa,MAAMN,aAC3BO,OAAUd,KAAKc,OACfmB,iBAAoBjC,KAAKiC,iBACzB0C,OAAU3E,KAAKa,MAAMhC,MAAQmB,KAAKa,MAAM/B,KACxCuD,YAAerC,KAAKqC,wBAzLhBC,IAAMC,iBCYdqC,MAbf,WACE,IAAM1F,EAAO,IAAImF,KACjB,OACE9F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACoG,EAAD,CACE3F,KAAM8C,OAAO9C,EAAK0B,WAClB/B,MAAOmD,OAAO9C,EAAKwB,YACnB5B,KAAMkD,OAAO9C,EAAK4F,mBCCRC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO9G,EAAAC,EAAAC,cAAC6G,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.982b9db4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <div className=\"header\">\r\n    \t<button className=\"header__btn\"\r\n    \t\t\t\t\tonClick={props.onPreviousM}>\r\n    \t\t{\" < \"}\r\n    \t</button>\r\n    \t<p> It is : {+props.month+1}.{props.year}</p>\r\n    \t<button className=\"header__btn\"\r\n    \t\t\t\t\tonClick={props.onToday}>\r\n    \t\tToday\r\n    \t</button>\r\n    \t<button className=\"header__btn\"\r\n    \t\t\t\t\tonClick={props.onNextM}>\r\n    \t\t{\" > \"}\r\n    \t</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction Modal(props) {\r\n  return (\r\n    <div className=\"modal\">\r\n      <p>Please enter your event for {props.date}.{+props.month+1}</p>\r\n        <label>\r\n        \tName of event\r\n       \t  <input type='text' placeholder='event'\r\n       \t \t\t\t\t onChange={props.inputVal}\r\n                 onKeyDown={props.handleKey}\r\n                 autoFocus>\r\n          </input>\r\n        </label>\r\n\t    <div className='modal__btns'>\r\n        <button className=\"modal__btn\"\r\n        \t\t\t\tonClick={props.saveEvent}>\r\n        \tSave\r\n        </button>\r\n        <button className=\"modal__btn\"\r\n         \t\t\t\tonClick={props.modalClose}>\r\n        \tCancel\r\n        </button>\r\n\t    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\n\r\nclass Dates extends React.Component { \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      events: this.props.events\r\n    } \r\n  }\r\n\r\n  getDates = () => {\r\n    const {date, dates,  month, year, selectedDate} = this.props;\r\n    if (+date.getDay() === 0) {\r\n      for (let i = 6; i > date.getDay(); i--) {\r\n        dates[1 + \".\" + i + \".\" + 1 ] = [\"\", \"\"];\r\n      }} else {\r\n      for (let i = 1; i < date.getDay(); i++) {\r\n        dates[1 + \".\" + i + \".\"+ 1 ] = [\"\", \"\"];\r\n      }\r\n    }\r\n    while(+date.getMonth() === +month) {\r\n      let day = date.getDate() + \".\" + month + \".\" + year;\r\n      dates[day] = [date.getDate(), this.state.events[day]];\r\n      date.setDate(+date.getDate() + 1);\r\n    }\r\n    \r\n    if (date.getDay() === 0) {\r\n      dates[\"40.00.0001\"] = [\" \", \" \"];\r\n    } else if (date.getDay() !== 1) {\r\n      for (let i = date.getDay(); i < 8; i++) {\r\n        dates[\"40.00.0\"+ i + 1] = [\" \", \" \"];\r\n      }}\r\n    Object.entries(dates).map(([day, event]) => {\r\n      if(+selectedDate === +event[0] &&\r\n         this.state.events[selectedDate + \".\" + month + \".\" + year]){\r\n        event[1] = this.state.events[event[0] + \".\" + month + \".\" + year]    \r\n      } \r\n    })\r\n    return dates;\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <>\r\n      {Object.entries(this.getDates())\r\n         .sort((a, b) => a[0] - b[0])\r\n         .map(([day, event], i) => {\r\n          return(\r\n        <div className={(+event[0] === +this.props.todayD && \r\n                          +this.props.todayMonth === +this.props.month &&\r\n                          +this.props.todayYear === +this.props.year )?\r\n                          (\"calender__date today\")\r\n                          :(\"calender__date\")}\r\n                key={day + String(this.props.date.getDay())}\r\n                onClick={this.props.handleSelectDate}>\r\n          {event[0]}\r\n          <div className=\"events\">\r\n            {Array.isArray(event[1])?\r\n              event[1].map((item, i) =>{\r\n                return (<>\r\n                        <p className=\"event\" key={item + i}>\r\n                        {item}\r\n                       </p>\r\n                       <button onClick={this.props.deleteEvent}>\r\n                        x\r\n                       </button>\r\n                       </>\r\n                     )})\r\n              :\"\"}\r\n          </div>\r\n        </div>\r\n      )})}\r\n    </>)\r\n  }\r\n}\r\n\r\nexport default Dates;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport Modal from './Modal';\r\nimport Dates from './Dates';\r\n\r\nclass Calender extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n    this.state = {\r\n      month: this.props.month,\r\n      year: this.props.year,\r\n      selectedDate: '',\r\n      modal: false\r\n    };\r\n    this.dates = {};\r\n\t\tthis.date = new Date(this.state.year, this.state.month, 1);\r\n\t\tthis.days = ['пн', 'вт', 'ср', 'чт', 'пт', 'сб', 'нд'];\r\n    this.inputs = [];\r\n    this.input = \"\";\r\n    this.events = {};\r\n\t}\r\n\r\n  getDays(){\r\n    return (\r\n      this.days.map((day, i) => {\r\n        return (\r\n          <div className=\"calender__day\" \r\n               key={day + i + 1}>\r\n            {day}\r\n          </div>\r\n          )}))\r\n  }\r\n\r\n  handleSelectDate = (event) => {\r\n    const target = event.target;\r\n    const parent = target.parentNode;\r\n    if(target.classList.contains(\"calender__date\")){\r\n      [...parent.children].forEach((item)=>{\r\n        item.classList.remove(\"selected\");\r\n      })\r\n      target.className += \" selected\";\r\n      this.setState({\r\n        modal: 'open',\r\n        selectedDate: target.firstChild.data\r\n      })\r\n      if(this.state.selectedDate !== target.firstChild.data){\r\n        this.inputs = this.events[target.firstChild.data + \".\" + \r\n                                  this.state.month + \".\" + \r\n                                  this.state.year] || [];\r\n      }\r\n    } else if(parent.classList.contains(\"calender__date\")){\r\n      [...parent.parentNode.children].forEach((item)=>{\r\n        item.classList.remove(\"selected\");\r\n      })\r\n      parent.className += \" selected\";\r\n      this.setState({\r\n        modal: 'open',\r\n        selectedDate: parent.firstChild.data\r\n      })\r\n    }\r\n  }\r\n\r\n  handlePreviousM = () => {\r\n    if(this.state.month === 0){\r\n      this.setState(prevState => {\r\n      let previousYear = +prevState.year - 1;\r\n      return {month:12,\r\n              year: previousYear }\r\n      }) \r\n    this.date.setFullYear(this.state.year - 1); \r\n    }\r\n    this.setState(prevState => {\r\n      let previousMonth = --prevState.month;\r\n      return {month: previousMonth}\r\n    }) \r\n    this.date.setMonth(this.state.month-1);\r\n    this.dates = {};\r\n  }\r\n\r\n  handleNextM = () => {\r\n    if(this.state.month === 11){\r\n      this.setState(prevState => {\r\n      let nextYear = +prevState.year + 1;\r\n      return {month:-1,\r\n              year: nextYear }\r\n      })  \r\n    }\r\n    this.setState(prevState => {\r\n      let nextMonth = ++prevState.month;\r\n      return {month: nextMonth}\r\n    })\r\n    this.dates = {};\r\n  }\r\n\r\n  handleToday = () => {\r\n    this.setState({\r\n      month: this.props.month,\r\n      year: this.props.year\r\n    })\r\n    this.dates = [];\r\n    this.date.setMonth(this.props.month);\r\n    this.date.setFullYear(this.props.year); \r\n  }\r\n\r\n  modalClose = () => {\r\n    this.setState({\r\n      modal: false\r\n    })\r\n    this.input = \"\";\r\n  }\r\n\r\n  inputVal = (event) => {\r\n     this.input = event.target.value;\r\n  }\r\n\r\n  saveEvent = () => {\r\n    this.setState({\r\n      modal: false\r\n    })\r\n    if(this.input){\r\n      this.inputs.push(this.input);\r\n    }\r\n    this.events[this.state.selectedDate + \".\" + \r\n                this.state.month + \".\" + \r\n                this.state.year] = this.inputs;\r\n    this.input = \"\";\r\n  }\r\n\r\n  deleteEvent = (event) => {\r\n    const target = event.target;\r\n    const data = target.parentNode.parentNode.firstChild.data;\r\n\r\n    console.log(\r\n       this.events[\r\n      target.parentNode.parentNode.firstChild.data\r\n       + \".\" + \r\n                this.state.month + \".\" + \r\n                this.state.year]\r\n                .indexOf(target.previousElementSibling.data))\r\n    // target.previousElementSibling.data;\r\n    console.log(target.previousElementSibling.data)\r\n  }\r\n\r\n  handleKey = (event) => {\r\n    const enter = 13;\r\n    const exit = 27;\r\n    if(event.keyCode === exit){\r\n      this.modalClose();\r\n    }\r\n    if(event.keyCode === enter){\r\n      this.saveEvent();\r\n    }\r\n  }\r\n\r\n  render(){\r\n\t  return (\r\n      <div className=\"calender\">\r\n        <Header \r\n          date = {this.props.date}\r\n          month = {this.state.month}\r\n          year = {this.state.year}\r\n          onPreviousM = {this.handlePreviousM}\r\n          onNextM = {this.handleNextM}\r\n          onToday = {this.handleToday}\r\n        />\r\n      \t<div className=\"calender__board\">\r\n    \t\t\t<div className=\"calender__days\">\r\n    \t\t\t\t{this.getDays()}\r\n    \t\t\t</div>\r\n            {this.state.modal &&\r\n              <Modal date = {this.state.selectedDate}\r\n                     month = {this.state.month}\r\n                     modalClose = {this.modalClose}\r\n                     saveEvent = {this.saveEvent}\r\n                     inputVal = {this.inputVal}\r\n                     handleKey = {this.handleKey}\r\n              />\r\n            }\r\n            <div className=\"calender__dates\">\r\n            <Dates date = {this.date}\r\n                   todayD = {this.props.date}\r\n                   month = {this.state.month}\r\n                   dates = {this.dates}\r\n                   todayMonth = {this.props.month}\r\n                   year = {this.state.year}\r\n                   todayYear = {this.props.year}\r\n                   selectedDate = {this.state.selectedDate}\r\n                   events = {this.events}\r\n                   handleSelectDate = {this.handleSelectDate}\r\n                   select = {this.state.month + this.state.year}\r\n                   deleteEvent = {this.deleteEvent}\r\n            />\r\n          </div>\r\n      \t</div>\r\n      </div>\r\n  )}\r\n}\r\n\r\nexport default Calender;\r\n","import React from 'react';\r\nimport Calender from './components/Calender';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const date = new Date();\r\n  return (\r\n    <div className=\"App\">\r\n        <Calender \r\n          date={String(date.getDate())}\r\n          month={String(date.getMonth())}\r\n          year={String(date.getFullYear())}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}