{"version":3,"sources":["components/Header.js","components/Modal.js","components/Dates.js","components/Calender.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","onClick","onPreviousM","month","year","onToday","onNextM","Modal","type","placeholder","onChange","inputVal","saveEvent","modalClose","Dates","date","getDay","i","dates","String","getMonth","getDate","setDate","console","log","Object","entries","map","_ref","_ref2","slicedToArray","event","selectedDate","item","key","Fragment","sort","b","_ref3","_ref4","day","todayD","todayMonth","todayYear","handleSelectDate","Calender","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","target","classList","contains","toConsumableArray","parentNode","children","forEach","remove","setState","firstChild","data","state","inputs","modal","selectedYear","selectedMonth","handlePreviousM","prevState","setFullYear","setMonth","handleNextM","handleToday","input","value","push","days","Date","components_Header","getDays","components_Modal","components_Dates","React","Component","App","components_Calender","getFullYear","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oQAsBeA,MApBf,SAAgBC,GACd,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACdH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cACdC,QAASL,EAAMM,aACjB,OAEFL,EAAAC,EAAAC,cAAA,sBAAcH,EAAMO,MAAM,EAA1B,IAA8BP,EAAMQ,MACpCP,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cACdC,QAASL,EAAMS,SADnB,SAIAR,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cACdC,QAASL,EAAMU,SACjB,SCSQC,MAvBf,SAAeX,GACb,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACZH,EAAAC,EAAAC,cAAA,oCACCF,EAAAC,EAAAC,cAAA,6BAECF,EAAAC,EAAAC,cAAA,SAAOS,KAAK,OAAOC,YAAY,QAC3BC,SAAUd,EAAMe,YAExBd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACZH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aACdC,QAASL,EAAMgB,WADnB,QAICf,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aACbC,QAASL,EAAMiB,YADpB,oBCoCMC,MAjDf,SAAelB,GACX,GAA2B,GAAvBA,EAAMmB,KAAKC,SACb,IAAK,IAAIC,EAAI,EAAGA,EAAIrB,EAAMmB,KAAKC,SAAUC,IACvCrB,EAAMsB,MAAO,IAAMD,EAAI,GAAI,CAAC,IAAK,UAErC,IAAK,IAAIA,EAAI,EAAGA,EAAIrB,EAAMmB,KAAKC,SAAUC,IACrCrB,EAAMsB,MAAO,IAAMD,EAAI,GAAI,CAAC,IAAK,KAGrC,KAAOE,OAAOvB,EAAMmB,KAAKK,aAAexB,EAAMO,OAC1CP,EAAMsB,MAAM,IAAMtB,EAAMmB,KAAKM,UAAY,GAAG,CAACzB,EAAMmB,KAAKM,UAAU,IAClEzB,EAAMmB,KAAKO,SAAS1B,EAAMmB,KAAKM,UAAY,GAG/C,GAA2B,GAAvBzB,EAAMmB,KAAKC,SACbpB,EAAMsB,MAAM,MAAY,CAAC,IAAK,UACzB,GAA2B,GAAvBtB,EAAMmB,KAAKC,SACpB,IAAK,IAAIC,EAAIrB,EAAMmB,KAAKC,SAAUC,EAAI,EAAGA,IACvCrB,EAAMsB,MAAM,KAAMD,EAAI,GAAG,CAAC,IAAK,KAC/BM,QAAQC,IAAI5B,EAAMmB,KAAKC,UAc3B,OAXAS,OAAOC,QAAQ9B,EAAMsB,OAAOS,IAAI,SAAAC,GAAgB,IAAAC,EAAAJ,OAAAK,EAAA,EAAAL,CAAAG,EAAA,GAATG,GAASF,EAAA,GAAAA,EAAA,IAC9C,GAAGjC,EAAMoC,cAAgBD,EAAM,GAI7B,OAAOA,EAAM,GAAKnC,EAAMmC,MAAMJ,IAAI,SAACM,EAAMhB,GAAP,OAAYpB,EAAAC,EAAAC,cAAA,KAAGmC,IAAKD,EAAOhB,GAAIgB,OAIrEV,QAAQC,IAAI5B,EAAMsB,OAEVrB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqC,SAAA,KAAGV,OAAOC,QAAQ9B,EAAMsB,OAAOkB,KAAK,SAACtC,EAAGuC,GAAJ,OAAUvC,EAAE,GAAKuC,EAAE,KAAIV,IAAI,SAAAW,EAAerB,GAAI,IAAAsB,EAAAd,OAAAK,EAAA,EAAAL,CAAAa,EAAA,GAAjBE,EAAiBD,EAAA,GAAZR,EAAYQ,EAAA,GACtF,OACA1C,EAAAC,EAAAC,cAAA,OAAKC,UAAY+B,EAAM,IAAMnC,EAAM6C,QACnB7C,EAAM8C,YAAc9C,EAAMO,OAC1BP,EAAM+C,WAAa/C,EAAMQ,KAAQ,uBAAyB,iBACpE8B,IAAKtC,EAAMO,MAAQqC,EAAMrB,OAAOvB,EAAMmB,KAAKC,UAAYC,EACvDhB,QAASL,EAAMgD,kBAClBb,EAAM,GACPlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACX+B,EAAM,SCqHLc,cA5Jd,SAAAA,EAAYjD,GAAM,IAAAkD,EAAA,OAAArB,OAAAsB,EAAA,EAAAtB,CAAAuB,KAAAH,IACjBC,EAAArB,OAAAwB,EAAA,EAAAxB,CAAAuB,KAAAvB,OAAAyB,EAAA,EAAAzB,CAAAoB,GAAAM,KAAAH,KAAMpD,KA0BNgD,iBAAiB,SAACb,GACbA,EAAMqB,OAAOC,UAAUC,SAAS,mBACjC7B,OAAA8B,EAAA,EAAA9B,CAAIM,EAAMqB,OAAOI,WAAWC,UAAUC,QAAQ,SAACzB,GAC7CA,EAAKoB,UAAUM,OAAO,cACxB5B,EAAMqB,OAAOpD,WAAa,YAC1B8C,EAAKc,SAAS,CACZ5B,aAAcD,EAAMqB,OAAOS,WAAWC,OAEvChB,EAAKiB,MAAM/B,cAAcD,EAAMqB,OAAOS,WAAWC,OAClDhB,EAAKkB,OAAS,KAENjC,EAAMqB,OAAOI,WAAWH,UAAUC,SAAS,oBACnD7B,OAAA8B,EAAA,EAAA9B,CAAIM,EAAMqB,OAAOI,WAAWA,WAAWC,UAAUC,QAAQ,SAACzB,GACxDA,EAAKoB,UAAUM,OAAO,cACtB5B,EAAMqB,OAAOI,WAAWxD,WAAa,YACrC8C,EAAKc,SAAS,CACZ5B,aAAcD,EAAMqB,OAAOI,WAAWK,WAAWC,QAGvDhB,EAAKc,SAAS,CACZK,MAAO,OACPC,aAAcpB,EAAKiB,MAAM3D,KACzB+D,cAAerB,EAAKiB,MAAM5D,QAG5BoB,QAAQC,IAAIsB,EAAKiB,MAAM/B,eApDRc,EAuDjBsB,gBAAiB,WACM,GAAlBtB,EAAKiB,MAAM5D,QACZ2C,EAAKc,SAAS,SAAAS,GAEd,MAAO,CAAClE,MAAM,GACNC,MAFYiE,EAAUjE,KAAO,KAIvC0C,EAAK/B,KAAKuD,YAAYxB,EAAKiB,MAAM3D,KAAK,IAEtC0C,EAAKc,SAAS,SAAAS,GAEZ,MAAO,CAAClE,QADckE,EAAUlE,SAGlC2C,EAAK/B,KAAKwD,SAASzB,EAAKiB,MAAM5D,MAAM,GACpC2C,EAAK5B,MAAQ,GACb4B,EAAKkB,OAAQ,IAtEElB,EAyEjB0B,YAAa,WACU,IAAlB1B,EAAKiB,MAAM5D,OACZ2C,EAAKc,SAAS,SAAAS,GAEd,MAAO,CAAClE,OAAO,EACPC,MAFQiE,EAAUjE,KAAO,KAKnC0C,EAAKc,SAAS,SAAAS,GAEZ,MAAO,CAAClE,QADUkE,EAAUlE,SAG9B2C,EAAK5B,MAAQ,GACb4B,EAAKkB,OAAS,IAtFClB,EAyFjB2B,YAAY,WACV3B,EAAKc,SAAS,CACZzD,MAAO2C,EAAKlD,MAAMO,MAClBC,KAAM0C,EAAKlD,MAAMQ,OAEnB0C,EAAK5B,MAAQ,GACb4B,EAAK/B,KAAKwD,SAASzB,EAAKlD,MAAMO,OAC9B2C,EAAK/B,KAAKuD,YAAYxB,EAAKlD,MAAMQ,OAhGlB0C,EAmGjBjC,WAAY,WACViC,EAAKc,SAAS,CACZK,OAAO,KArGMnB,EAyGjBnC,SAAS,SAACoB,GACRe,EAAK4B,MAAQ3C,EAAMqB,OAAOuB,OA1GX7B,EA8GjBlC,UAAU,WACRkC,EAAKc,SAAS,CACZK,OAAO,IAETnB,EAAKkB,OAAOY,KAAK9B,EAAK4B,QAhHtB5B,EAAK5B,MAAM,GACb4B,EAAK+B,KAAO,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAC/C/B,EAAKiB,MAAM,CACT5D,MAAO2C,EAAKlD,MAAMO,MAClBC,KAAM0C,EAAKlD,MAAMQ,KACjB4B,aAAc,GACdmC,cAAe,GACfD,aAAc,GACdD,OAAO,GAEXnB,EAAK/B,KAAO,IAAI+D,KAAKhC,EAAKiB,MAAM3D,KAAM0C,EAAKiB,MAAM5D,MAAO,GACtD2C,EAAKkB,OAAO,GACZlB,EAAK4B,MAAM,GAdI5B,yEAkBf,OACEE,KAAK6B,KAAKlD,IAAI,SAACa,EAAKvB,GAClB,OACEpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBkC,IAAKM,EAAMvB,EAAI,GAC7CuB,sCAgGN,OACG3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACgF,EAAD,CACEhE,KAAMiC,KAAKpD,MAAMmB,KACjBZ,MAAO6C,KAAKe,MAAM5D,MAClBC,KAAM4C,KAAKe,MAAM3D,KACjBF,YAAa8C,KAAKoB,gBAClB9D,QAAS0C,KAAKwB,YACdnE,QAAS2C,KAAKyB,cACjB5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbgD,KAAKgC,WAEHhC,KAAKe,MAAME,OACXpE,EAAAC,EAAAC,cAACkF,EAAD,CAAOpE,WAAYmC,KAAKnC,WACjBD,UAAWoC,KAAKpC,UAChBD,SAAUqC,KAAKrC,WACvBd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAEbH,EAAAC,EAAAC,cAACmF,EAAD,CAAOnE,KAAMiC,KAAKjC,KACX0B,OAAQO,KAAKpD,MAAMmB,KACnBZ,MAAO6C,KAAKe,MAAM5D,MAClBe,MAAO8B,KAAK9B,MACZwB,WAAYM,KAAKpD,MAAMO,MACvBC,KAAM4C,KAAKe,MAAM3D,KACjBuC,UAAWK,KAAKpD,MAAMQ,KACtB4B,aAAcgB,KAAKe,MAAM/B,aACzBD,MAAOiB,KAAKgB,OACZpB,iBAAkBI,KAAKJ,iBACvBsB,aAAelB,KAAKe,MAAM3D,KAC1B+D,cAAgBnB,KAAKe,MAAM5D,kBArJzBgF,IAAMC,iBCYdC,MAbf,WACE,IAAMtE,EAAO,IAAI+D,KACjB,OACEjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACuF,EAAD,CACEvE,KAAMI,OAAOJ,EAAKM,WAClBlB,MAAOgB,OAAOJ,EAAKK,YACnBhB,KAAMe,OAAOJ,EAAKwE,mBCCRC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOjG,EAAAC,EAAAC,cAACgG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.893fd982.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <div className=\"header\">\r\n    \t<button className=\"header__btn\"\r\n    \t\t\t\t\tonClick={props.onPreviousM}>\r\n    \t\t{\" < \"}\r\n    \t</button>\r\n    \t<p> It is : {+props.month+1}.{props.year}</p>\r\n    \t<button className=\"header__btn\"\r\n    \t\t\t\t\tonClick={props.onToday}>\r\n    \t\tToday\r\n    \t</button>\r\n    \t<button className=\"header__btn\"\r\n    \t\t\t\t\tonClick={props.onNextM}>\r\n    \t\t{\" > \"}\r\n    \t</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction Modal(props) {\r\n  return (\r\n    <div className=\"modal\">\r\n       <p>Please enter your event</p>\r\n        <label>\r\n        \tName of event\r\n       \t <input type='text' placeholder='event'\r\n       \t \t\t\t\tonChange={props.inputVal}></input>\r\n        </label>\r\n\t    <div className='modal__btns'>\r\n        <button className=\"modal__btn\"\r\n        \t\t\t\tonClick={props.saveEvent}>\r\n        \tSave\r\n        </button>\r\n         <button className=\"modal__btn\"\r\n         \t\t\t\t onClick={props.modalClose}>\r\n        \tCancel\r\n        </button>\r\n\t    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\n\r\n\r\nfunction Dates(props) {  \r\n    if (props.date.getDay() == 0) {\r\n      for (let i = 6; i > props.date.getDay(); i--) {\r\n        props.dates[ \"1\" + i + 1 ]=[\" \", \" \"];\r\n      }} else {\r\n    for (let i = 1; i < props.date.getDay(); i++) {\r\n        props.dates[ \"1\" + i + 1 ]=[\" \", \" \"];\r\n      }\r\n    }\r\n    while (String(props.date.getMonth()) == props.month) {\r\n        props.dates[\"2\" + props.date.getDate() + 1]=[props.date.getDate(),[]];\r\n        props.date.setDate(+props.date.getDate() + 1);\r\n    }\r\n    \r\n    if (props.date.getDay() == 0){\r\n      props.dates[\"400\" + 1 ]=[\" \", \" \"];\r\n    } else if (props.date.getDay() != 1) {\r\n      for (let i = props.date.getDay(); i < 8; i++) {\r\n        props.dates[\"40\"+ i + 1]=[\" \", \" \"];\r\n        console.log(props.date.getDay())\r\n      }}\r\n\r\n    Object.entries(props.dates).map(([day, event])=>{\r\n      if(props.selectedDate == event[0] \r\n        // &&   props.selectedYear == props.year &&\r\n        // props.selectedMonth == props.month\r\n        ){\r\n        return event[1] = props.event.map((item, i) =><p key={item + i}>{item}</p>)\r\n        } \r\n})\r\n\r\n    console.log(props.dates)\r\n\r\n    return (<>{Object.entries(props.dates).sort((a, b) => a[0] - b[0]).map(([day, event], i)=>{\r\n        return(\r\n        <div className={(event[0] == props.todayD && \r\n                        props.todayMonth == props.month &&\r\n                        props.todayYear == props.year )?(\"calender__date today\"):(\"calender__date\")}\r\n              key={props.month + day + String(props.date.getDay()) + i}\r\n              onClick={props.handleSelectDate}>\r\n          {event[0]}\r\n          <div className=\"events\">\r\n             {event[1]}\r\n          </div>\r\n        </div>\r\n    )})}</>)\r\n \r\n}\r\n\r\nexport default Dates;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport Modal from './Modal';\r\nimport Dates from './Dates';\r\n\r\nclass Calender extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n    this.dates={};\r\n\t\tthis.days = ['пн', 'вт', 'ср', 'чт', 'пт', 'сб', 'нд'];\r\n    this.state={\r\n      month: this.props.month,\r\n      year: this.props.year,\r\n      selectedDate: '',\r\n      selectedMonth: '',\r\n      selectedYear: '',\r\n      modal: false\r\n    }\r\n\t\tthis.date = new Date(this.state.year, this.state.month, 1);\r\n    this.inputs=[];\r\n    this.input=\"\";\r\n\t}\r\n\r\n  getDays(){\r\n    return (\r\n      this.days.map((day, i)=>{\r\n        return (\r\n          <div className=\"calender__day\" key={day + i + 1}>\r\n          {day}\r\n          </div>\r\n          )}))\r\n  }\r\n\r\n  handleSelectDate=(event)=>{\r\n    if(event.target.classList.contains(\"calender__date\")){\r\n      [...event.target.parentNode.children].forEach((item)=>{\r\n        item.classList.remove(\"selected\");})\r\n      event.target.className += \" selected\";\r\n      this.setState({\r\n        selectedDate: event.target.firstChild.data\r\n    })\r\n    if(this.state.selectedDate!=event.target.firstChild.data){\r\n      this.inputs = [];\r\n    }\r\n    } else if(event.target.parentNode.classList.contains(\"calender__date\")){\r\n      [...event.target.parentNode.parentNode.children].forEach((item)=>{\r\n        item.classList.remove(\"selected\");})\r\n        event.target.parentNode.className += \" selected\";\r\n        this.setState({\r\n          selectedDate: event.target.parentNode.firstChild.data\r\n      })\r\n    }\r\n    this.setState({\r\n      modal: 'open',\r\n      selectedYear: this.state.year,\r\n      selectedMonth: this.state.month\r\n    })\r\n    \r\n    console.log(this.state.selectedDate)\r\n  }\r\n\r\n  handlePreviousM =()=>{\r\n    if(this.state.month==0){\r\n      this.setState(prevState => {\r\n      let previousYear = +prevState.year - 1;\r\n      return {month:12,\r\n              year: previousYear }\r\n      }) \r\n    this.date.setFullYear(this.state.year-1); \r\n    }\r\n    this.setState(prevState => {\r\n      let previousMonth = --prevState.month;\r\n      return {month: previousMonth}\r\n    }) \r\n    this.date.setMonth(this.state.month-1);\r\n    this.dates = {};\r\n    this.inputs= []\r\n  }\r\n\r\n  handleNextM =()=>{\r\n    if(this.state.month==11){\r\n      this.setState(prevState => {\r\n      let nextYear = +prevState.year + 1;\r\n      return {month:-1,\r\n              year: nextYear }\r\n      })  \r\n    }\r\n    this.setState(prevState => {\r\n      let nextMonth = ++prevState.month;\r\n      return {month: nextMonth}\r\n    })\r\n    this.dates = {};\r\n    this.inputs = []\r\n  }\r\n\r\n  handleToday=()=>{\r\n    this.setState({\r\n      month: this.props.month,\r\n      year: this.props.year\r\n    })\r\n    this.dates = [];\r\n    this.date.setMonth(this.props.month);\r\n    this.date.setFullYear(this.props.year); \r\n  }\r\n\r\n  modalClose =()=>{\r\n    this.setState({\r\n      modal: false\r\n    })\r\n  }\r\n\r\n  inputVal=(event)=>{\r\n    this.input = event.target.value;\r\n    \r\n  }\r\n\r\n  saveEvent=()=>{\r\n    this.setState({\r\n      modal: false\r\n    })\r\n    this.inputs.push(this.input);\r\n  }\r\n\r\n  render(){\r\n  \t  return (\r\n        <div className=\"calender\">\r\n          <Header \r\n            date={this.props.date}\r\n            month={this.state.month}\r\n            year={this.state.year}\r\n            onPreviousM={this.handlePreviousM}\r\n            onNextM={this.handleNextM}\r\n            onToday={this.handleToday}/>\r\n        \t<div className=\"calender__board\">\r\n      \t\t\t<div className=\"calender__days\">\r\n      \t\t\t\t{this.getDays()}\r\n      \t\t\t</div>\r\n            {this.state.modal &&\r\n             <Modal modalClose={this.modalClose}\r\n                    saveEvent={this.saveEvent}\r\n                    inputVal={this.inputVal}/>}\r\n            <div className=\"calender__dates\">\r\n              \r\n              <Dates date={this.date}\r\n                     todayD={this.props.date}\r\n                     month={this.state.month}\r\n                     dates={this.dates}\r\n                     todayMonth={this.props.month}\r\n                     year={this.state.year}\r\n                     todayYear={this.props.year}\r\n                     selectedDate={this.state.selectedDate}\r\n                     event={this.inputs}\r\n                     handleSelectDate={this.handleSelectDate}\r\n                     selectedYear= {this.state.year}\r\n                     selectedMonth= {this.state.month}\r\n               />\r\n            </div>\r\n        \t</div>\r\n        </div>\r\n    )}\r\n}\r\n\r\nexport default Calender;\r\n","import React from 'react';\r\nimport Calender from './components/Calender';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const date = new Date;\r\n  return (\r\n    <div className=\"App\">\r\n        <Calender \r\n          date={String(date.getDate())}\r\n          month={String(date.getMonth())}\r\n          year={String(date.getFullYear())} />\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}